/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DatabaseView.java
 *
 * Created on Sep 25, 2009, 5:09:33 PM
 */
package backend.database;

import backend.DatabaseIO;
import backend.components.GridView;
import java.util.Arrays;
import java.util.Timer;
import java.util.TimerTask;
import javax.imageio.ImageIO;
import org.tmatesoft.sqljet.core.SqlJetException;
import utils.ErrorView;

/**
 *
 * @author psastras
 */
public class DatabaseView extends javax.swing.JFrame {

    /** Creates new form DatabaseView */
    public DatabaseView() {
        try {
            this.setIconImage(ImageIO.read(getClass().getResource("/gradesystem/resources/icons/32x32/x-office-spreadsheet.png")));
        } catch (Exception e) {
        }
        initComponents();
        updateFormComponents();
    }

    private void refreshTable(String tableName) {
        this.setTitle(tableName + " - cs015DatabaseEditor");
        m_gridView.refresh(tableName);
    }

    public GridView getGrid() {
        return m_gridView;
    }

    public void updateStatus(String message) {
        m_statusLabel.setText(message);
        Timer t = new Timer();
        class NewTask extends TimerTask {

            @Override
            public void run() {
                m_statusLabel.setText("Ready");
                this.cancel();
            }
        }

        t.schedule(new NewTask(), 1000);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m_scrollPane1 = new javax.swing.JScrollPane();
        m_gridView = new backend.components.GridView();
        m_tableSelector = new javax.swing.JComboBox();
        m_refreshButton = new javax.swing.JButton();
        m_addRowButton = new javax.swing.JButton();
        m_removeRowButton = new javax.swing.JButton();
        m_filterText = new javax.swing.JTextField();
        m_filterLabel = new javax.swing.JLabel();
        m_statusLabel = new javax.swing.JLabel();
        m_menu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        m_scrollPane1.setName("m_scrollPane1"); // NOI18N

        m_gridView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        m_gridView.setName("m_gridView"); // NOI18N
        m_scrollPane1.setViewportView(m_gridView);

        m_tableSelector.setName("m_tableSelector"); // NOI18N
        m_tableSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_tableSelectorActionPerformed(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gradesystem.GradeSystemApp.class).getContext().getResourceMap(DatabaseView.class);
        m_refreshButton.setIcon(resourceMap.getIcon("m_refreshButton.icon")); // NOI18N
        m_refreshButton.setText(resourceMap.getString("m_refreshButton.text")); // NOI18N
        m_refreshButton.setIconTextGap(10);
        m_refreshButton.setName("m_refreshButton"); // NOI18N
        m_refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_refreshButtonActionPerformed(evt);
            }
        });

        m_addRowButton.setIcon(resourceMap.getIcon("m_addRowButton.icon")); // NOI18N
        m_addRowButton.setText(resourceMap.getString("m_addRowButton.text")); // NOI18N
        m_addRowButton.setIconTextGap(10);
        m_addRowButton.setName("m_addRowButton"); // NOI18N
        m_addRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_addRowButtonActionPerformed(evt);
            }
        });

        m_removeRowButton.setIcon(resourceMap.getIcon("m_removeRowButton.icon")); // NOI18N
        m_removeRowButton.setText(resourceMap.getString("m_removeRowButton.text")); // NOI18N
        m_removeRowButton.setIconTextGap(10);
        m_removeRowButton.setName("m_removeRowButton"); // NOI18N
        m_removeRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_removeRowButtonActionPerformed(evt);
            }
        });

        m_filterText.setText(resourceMap.getString("m_filterText.text")); // NOI18N
        m_filterText.setName("m_filterText"); // NOI18N
        m_filterText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m_filterTextKeyTyped(evt);
            }
        });

        m_filterLabel.setText(resourceMap.getString("m_filterLabel.text")); // NOI18N
        m_filterLabel.setName("m_filterLabel"); // NOI18N

        m_statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        m_statusLabel.setText(resourceMap.getString("m_statusLabel.text")); // NOI18N
        m_statusLabel.setName("m_statusLabel"); // NOI18N

        m_menu.setName("m_menu"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N
        m_menu.add(jMenu1);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N
        m_menu.add(jMenu2);

        setJMenuBar(m_menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(531, 531, 531)
                        .addComponent(m_statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
                    .addComponent(m_scrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(m_tableSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_refreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(m_filterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_filterText, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_addRowButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_removeRowButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_tableSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_refreshButton)
                    .addComponent(m_removeRowButton)
                    .addComponent(m_addRowButton)
                    .addComponent(m_filterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_filterLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_addRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_addRowButtonActionPerformed
        updateStatus("Synchronizing...");
        m_gridView.addRow(m_tableSelector.getSelectedItem().toString());
    }//GEN-LAST:event_m_addRowButtonActionPerformed

    private void m_removeRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_removeRowButtonActionPerformed
        updateStatus("Synchronizing...");
        m_gridView.removeRows(m_tableSelector.getSelectedItem().toString());
    }//GEN-LAST:event_m_removeRowButtonActionPerformed

    private void m_filterTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_filterTextKeyTyped
        m_gridView.filter(m_filterText.getText());
    }//GEN-LAST:event_m_filterTextKeyTyped

    private void m_tableSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_tableSelectorActionPerformed
        m_gridView.removeEditor();
        refreshTable((String) m_tableSelector.getSelectedItem());
    }//GEN-LAST:event_m_tableSelectorActionPerformed

    private void m_refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_refreshButtonActionPerformed
        m_gridView.refresh((String) m_tableSelector.getSelectedItem());
    }//GEN-LAST:event_m_refreshButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DatabaseView().setVisible(true);
            }
        });
    }

    private void updateFormComponents() {
        updateStatus("Synchronizing...");
        try {
            String[] tableNames = DatabaseIO.getTableNames();
            m_tableSelector.removeAllItems();
            Arrays.sort(tableNames);
            for (String s : tableNames) {
                m_tableSelector.insertItemAt(s, m_tableSelector.getItemCount());
            }
            if (m_tableSelector.getItemCount() > 0) {
                m_tableSelector.setSelectedIndex(0);
            }
        } catch (SqlJetException e) {
            new ErrorView(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JButton m_addRowButton;
    private javax.swing.JLabel m_filterLabel;
    private javax.swing.JTextField m_filterText;
    private backend.components.GridView m_gridView;
    private javax.swing.JMenuBar m_menu;
    private javax.swing.JButton m_refreshButton;
    private javax.swing.JButton m_removeRowButton;
    private javax.swing.JScrollPane m_scrollPane1;
    private javax.swing.JLabel m_statusLabel;
    private javax.swing.JComboBox m_tableSelector;
    // End of variables declaration//GEN-END:variables
}
