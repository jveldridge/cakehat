package gradesystem.views.backend.stathist;

import gradesystem.config.Assignment;
import gradesystem.config.Part;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.jfree.data.statistics.Statistics;
import gradesystem.Allocator;

/**
 *
 * @author psastras
 * @author jeldridg
 */
public class AssignmentChartPanel extends javax.swing.JPanel {

    /** Creates new form ChartDataPanel */
    public AssignmentChartPanel() {
        initComponents();
    }

    public void updateChartData(Assignment asgn, Iterable<String> students) {
        Map<String, Double> scoreMap = Allocator.getDatabaseIO().getAssignmentScores(asgn, students);
        double outOf = asgn.getTotalPoints();
        
        List<Double> scores = new ArrayList<Double>();
        for (String student : scoreMap.keySet()) {
            double earned = scoreMap.get(student);
            scores.add(earned / outOf * 100);
        }

        this.updateChartData(asgn.getName(), scores);
    }
    
    public void updateChartData(Part part, Iterable<String> students) {
        Map<String, Double> scoreMap = Allocator.getDatabaseIO().getPartScores(part, students);
        double outOf = part.getPoints();

        List<Double> scores = new ArrayList<Double>();
        for (String student : scoreMap.keySet()) {
            double earned = scoreMap.get(student);
            scores.add(earned / outOf * 100);
        }

        this.updateChartData(part.getAssignment().getName() + ": " + part.getName(), scores);
    }
    
    private void updateChartData(String asgnName, List<Double> scores) {
        if(scores.size() == 0){
            chartPanel.loadData(asgnName, new double[]{});
            return;
        }
        
        double[] data = new double[scores.size()];
        for (int i = 0; i < data.length; i++) {
            data[i] = scores.get(i);
        }
        Number[] dataAsNumber = new Number[data.length];
        for (int i = 0; i < dataAsNumber.length; i++) {
            dataAsNumber[i] = (Number) data[i];
        }

        nLabel.setText("" + data.length);
        medianLabel.setText("" + Statistics.calculateMedian(scores));
        meanLabel.setText("" + Statistics.calculateMean(scores));
        stdDevLabel.setText("" + Statistics.getStdDev(dataAsNumber));
        chartPanel.loadData(asgnName, data);
    }

    public BufferedImage getImage(int w, int h) {
        return chartPanel.getImage(w, h);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        medianLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nLabel = new javax.swing.JLabel();
        stdDevLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        meanLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chartPanel = new gradesystem.views.backend.stathist.HistogramPanel();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gradesystem.GradeSystemApp.class).getContext().getResourceMap(AssignmentChartPanel.class);
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText("<html><b>Number of Students</b></html>");
        jLabel1.setName("jLabel1"); // NOI18N

        medianLabel.setForeground(resourceMap.getColor("medianLabel.foreground")); // NOI18N
        medianLabel.setText(resourceMap.getString("medianLabel.text")); // NOI18N
        medianLabel.setName("medianLabel"); // NOI18N

        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText("<html><b>Median</b></html>");
        jLabel5.setName("jLabel5"); // NOI18N

        nLabel.setForeground(resourceMap.getColor("nLabel.foreground")); // NOI18N
        nLabel.setText(resourceMap.getString("nLabel.text")); // NOI18N
        nLabel.setName("nLabel"); // NOI18N

        stdDevLabel.setForeground(resourceMap.getColor("stdDevLabel.foreground")); // NOI18N
        stdDevLabel.setText(resourceMap.getString("stdDevLabel.text")); // NOI18N
        stdDevLabel.setName("stdDevLabel"); // NOI18N

        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText("<html><b>Standard Deviation</b></html>");
        jLabel7.setName("jLabel7"); // NOI18N

        meanLabel.setForeground(resourceMap.getColor("meanLabel.foreground")); // NOI18N
        meanLabel.setText(resourceMap.getString("meanLabel.text")); // NOI18N
        meanLabel.setName("meanLabel"); // NOI18N

        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText("<html><b>Mean / Average</b></html>");
        jLabel3.setName("jLabel3"); // NOI18N

        chartPanel.setName("chartPanel"); // NOI18N

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 587, Short.MAX_VALUE)
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 262, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(meanLabel)
                            .addComponent(nLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stdDevLabel)
                            .addComponent(medianLabel))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(chartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(meanLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(medianLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stdDevLabel)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gradesystem.views.backend.stathist.HistogramPanel chartPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel meanLabel;
    private javax.swing.JLabel medianLabel;
    private javax.swing.JLabel nLabel;
    private javax.swing.JLabel stdDevLabel;
    // End of variables declaration//GEN-END:variables
}
