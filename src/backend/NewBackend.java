package backend;

import backend.assignmentdist.AssignmentdistView;
import backend.assignmentdist.ReassignView;
import backend.gradereport.GradeReportView;
import backend.histogram.HistogramView;
import rubric.visualizers.GradingVisualizer;
import rubric.RubricManager;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Vector;
import javax.swing.JButton;
import rubric.visualizers.PreviewVisualizer;
import utils.Allocator;

/**
 * Backend interface.
 * 
 * @author jeldridg
 * Created on Dec 26, 2009, 6:29:58 PM
 */
public class NewBackend extends javax.swing.JFrame {

    ArrayList<JButton> _asgnButtons, _studButtons;
    ArrayList<JButton> _multiStudButtons;
    ArrayList<JButton> _multiAsgnButtons;
    
    /** Creates new form NewJFrame */
    public NewBackend() {
        initComponents();

        _asgnButtons = new ArrayList(Arrays.asList(generateDistButton, previewRubricButton, reassignGradingButton,
                                                    gradingStandardsButton, demoButton, importGradesButton));
        _studButtons = new ArrayList(Arrays.asList(statisticsButton, sendGradesButton, openButton, runCodeButton,
                                                    testCodeButton, extensionButton, exemptionButton, printCodeButton,
                                                    printRubricButton, viewRubricButton));
        _multiStudButtons = new ArrayList(Arrays.asList(printRubricButton, statisticsButton, sendGradesButton, extensionButton, exemptionButton));
        _multiAsgnButtons = new ArrayList(Arrays.asList(importGradesButton));

        //populate assignment list
        assignmentList.setListData(OldDatabaseOps.getProjectNames());

        //populate student list
        studentList.setListData(OldDatabaseOps.getStudentNames());

        this.updateGUI();

        CardLayout cl = (CardLayout) cardPanel.getLayout();
        cl.show(cardPanel, "instructionCard");

        //make the user's temporary grading directory
        Allocator.getGeneralUtilities().makeDirectory(Allocator.getGeneralUtilities().getUserGradingDirectory());
        
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        studentFilter = new javax.swing.JTextField();
        assignmentsLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        assignmentList = new javax.swing.JList();
        studentsLabel = new javax.swing.JLabel();
        asgnSelectAllButton = new javax.swing.JButton();
        studentSelectAllButton = new javax.swing.JButton();
        asgnTypeComboBox = new javax.swing.JComboBox();
        asgnSelectLabel = new javax.swing.JLabel();
        asgnSelectNoneButton = new javax.swing.JButton();
        studentSelectNoneButton = new javax.swing.JButton();
        studentSelectLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        cardPanel = new javax.swing.JPanel();
        singleSelectedPanel = new javax.swing.JPanel();
        writtenComponentLabel = new javax.swing.JLabel();
        writtenEarnedLabel = new javax.swing.JLabel();
        writtenEarnedText = new javax.swing.JTextField();
        writtenTotalLabel = new javax.swing.JLabel();
        writtenTotalText = new javax.swing.JTextField();
        writtenScoreLabel = new javax.swing.JLabel();
        codeComponentLabel = new javax.swing.JLabel();
        overallLabel = new javax.swing.JLabel();
        overallScoreValue = new javax.swing.JLabel();
        writtenScoreValue = new javax.swing.JLabel();
        overallEarnedLabel = new javax.swing.JLabel();
        overalTotalLabel = new javax.swing.JLabel();
        overallScoreLabel = new javax.swing.JLabel();
        codeEarnedLabel = new javax.swing.JLabel();
        codeEarnedText = new javax.swing.JTextField();
        totalEarnedLabel = new javax.swing.JLabel();
        codeTotalText = new javax.swing.JTextField();
        codeScoreLabel = new javax.swing.JLabel();
        codeScoreValue = new javax.swing.JLabel();
        overallEarnedValue = new javax.swing.JLabel();
        overallTotalValue = new javax.swing.JLabel();
        submitGradeButton = new javax.swing.JButton();
        multiSelectedPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        instructionsPanel = new javax.swing.JPanel();
        welcomeLabel = new javax.swing.JLabel();
        instructionsLabel = new javax.swing.JLabel();
        jSplitPane2 = new javax.swing.JSplitPane();
        centerPanel = new javax.swing.JPanel();
        selectedStudsLabel = new javax.swing.JLabel();
        selectedAsgnLabel = new javax.swing.JLabel();
        generateDistButton = new javax.swing.JButton();
        reassignGradingButton = new javax.swing.JButton();
        statisticsButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        sendGradesButton = new javax.swing.JButton();
        importGradesButton = new javax.swing.JButton();
        runCodeButton = new javax.swing.JButton();
        testCodeButton = new javax.swing.JButton();
        viewRubricButton = new javax.swing.JButton();
        extensionButton = new javax.swing.JButton();
        exemptionButton = new javax.swing.JButton();
        demoButton = new javax.swing.JButton();
        printCodeButton = new javax.swing.JButton();
        printRubricButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        previewRubricButton = new javax.swing.JButton();
        gradingStandardsButton = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        generalCommandsLabel = new javax.swing.JLabel();
        blacklistButton = new javax.swing.JButton();
        configButton = new javax.swing.JButton();
        exportDBButton = new javax.swing.JButton();
        resetDatabaseButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cakehat - Backend - " + Allocator.getGeneralUtilities().getUserLogin());
        setName("Form"); // NOI18N

        jSplitPane1.setName("jSplitPane1"); // NOI18N

        leftPanel.setMinimumSize(new java.awt.Dimension(350, 0));
        leftPanel.setName("leftPanel"); // NOI18N
        leftPanel.setPreferredSize(new java.awt.Dimension(350, 522));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gradesystem.GradeSystemApp.class).getContext().getResourceMap(NewBackend.class);
        studentFilter.setText(resourceMap.getString("studentFilter.text")); // NOI18N
        studentFilter.setName("studentFilter"); // NOI18N
        studentFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                studentFilterKeyPressed(evt);
            }
        });

        assignmentsLabel.setText(resourceMap.getString("assignmentsLabel.text")); // NOI18N
        assignmentsLabel.setName("assignmentsLabel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        assignmentList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        assignmentList.setName("assignmentList"); // NOI18N
        assignmentList.setPreferredSize(null);
        assignmentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignmentListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(assignmentList);

        studentsLabel.setText(resourceMap.getString("studentsLabel.text")); // NOI18N
        studentsLabel.setName("studentsLabel"); // NOI18N

        asgnSelectAllButton.setText(resourceMap.getString("asgnSelectAllButton.text")); // NOI18N
        asgnSelectAllButton.setName("asgnSelectAllButton"); // NOI18N
        asgnSelectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asgnSelectAllButtonActionPerformed(evt);
            }
        });

        studentSelectAllButton.setText(resourceMap.getString("studentSelectAllButton.text")); // NOI18N
        studentSelectAllButton.setName("studentSelectAllButton"); // NOI18N
        studentSelectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentSelectAllButtonActionPerformed(evt);
            }
        });

        asgnTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Type: All", "Type: Code", "Type: Written", "Type: Combination", "Type: Lab" }));
        asgnTypeComboBox.setSelectedItem("Type: Code");
        asgnTypeComboBox.setName("asgnTypeComboBox"); // NOI18N
        asgnTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asgnTypeComboBoxActionPerformed(evt);
            }
        });

        asgnSelectLabel.setText(resourceMap.getString("asgnSelectLabel.text")); // NOI18N
        asgnSelectLabel.setName("asgnSelectLabel"); // NOI18N

        asgnSelectNoneButton.setText(resourceMap.getString("asgnSelectNoneButton.text")); // NOI18N
        asgnSelectNoneButton.setName("asgnSelectNoneButton"); // NOI18N
        asgnSelectNoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asgnSelectNoneButtonActionPerformed(evt);
            }
        });

        studentSelectNoneButton.setText(resourceMap.getString("studentSelectNoneButton.text")); // NOI18N
        studentSelectNoneButton.setName("studentSelectNoneButton"); // NOI18N
        studentSelectNoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentSelectNoneButtonActionPerformed(evt);
            }
        });

        studentSelectLabel.setText(resourceMap.getString("studentSelectLabel.text")); // NOI18N
        studentSelectLabel.setName("studentSelectLabel"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        studentList.setMaximumSize(new java.awt.Dimension(160, 95));
        studentList.setMinimumSize(new java.awt.Dimension(140, 95));
        studentList.setName("studentList"); // NOI18N
        studentList.setPreferredSize(null);
        studentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(studentList);

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(assignmentsLabel)
                    .addComponent(asgnTypeComboBox, 0, 156, Short.MAX_VALUE)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(asgnSelectLabel)
                        .addGap(18, 18, 18)
                        .addComponent(asgnSelectAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(asgnSelectNoneButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                        .addComponent(studentSelectLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(studentSelectAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentSelectNoneButton))
                    .addComponent(studentsLabel)
                    .addComponent(studentFilter, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignmentsLabel)
                    .addComponent(studentsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(studentSelectNoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(studentSelectAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(asgnSelectLabel)
                        .addComponent(asgnSelectNoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(asgnSelectAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(studentSelectLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asgnTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(leftPanel);

        jPanel2.setMaximumSize(new java.awt.Dimension(750, 32767));
        jPanel2.setMinimumSize(new java.awt.Dimension(750, 0));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(750, 561));

        cardPanel.setName("cardPanel"); // NOI18N
        cardPanel.setLayout(new CardLayout());
        cardPanel.setLayout(new java.awt.CardLayout());

        singleSelectedPanel.setName(""); // NOI18N

        writtenComponentLabel.setFont(resourceMap.getFont("writtenComponentLabel.font")); // NOI18N
        writtenComponentLabel.setText(resourceMap.getString("writtenComponentLabel.text")); // NOI18N
        writtenComponentLabel.setName("writtenComponentLabel"); // NOI18N

        writtenEarnedLabel.setText(resourceMap.getString("writtenEarnedLabel.text")); // NOI18N
        writtenEarnedLabel.setName("writtenEarnedLabel"); // NOI18N

        writtenEarnedText.setName("writtenEarnedText"); // NOI18N

        writtenTotalLabel.setText(resourceMap.getString("writtenTotalLabel.text")); // NOI18N
        writtenTotalLabel.setName("writtenTotalLabel"); // NOI18N

        writtenTotalText.setEditable(false);
        writtenTotalText.setFocusable(false);
        writtenTotalText.setName("writtenTotalText"); // NOI18N

        writtenScoreLabel.setText(resourceMap.getString("writtenScoreLabel.text")); // NOI18N
        writtenScoreLabel.setName("writtenScoreLabel"); // NOI18N

        codeComponentLabel.setFont(resourceMap.getFont("codeComponentLabel.font")); // NOI18N
        codeComponentLabel.setText(resourceMap.getString("codeComponentLabel.text")); // NOI18N
        codeComponentLabel.setName("codeComponentLabel"); // NOI18N

        overallLabel.setFont(resourceMap.getFont("overallLabel.font")); // NOI18N
        overallLabel.setText(resourceMap.getString("overallLabel.text")); // NOI18N
        overallLabel.setName("overallLabel"); // NOI18N

        overallScoreValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        overallScoreValue.setText(resourceMap.getString("overallScoreValue.text")); // NOI18N
        overallScoreValue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        overallScoreValue.setName("overallScoreValue"); // NOI18N

        writtenScoreValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        writtenScoreValue.setText(resourceMap.getString("writtenScoreValue.text")); // NOI18N
        writtenScoreValue.setName("writtenScoreValue"); // NOI18N

        overallEarnedLabel.setText(resourceMap.getString("overallEarnedLabel.text")); // NOI18N
        overallEarnedLabel.setName("overallEarnedLabel"); // NOI18N

        overalTotalLabel.setText(resourceMap.getString("overalTotalLabel.text")); // NOI18N
        overalTotalLabel.setName("overalTotalLabel"); // NOI18N

        overallScoreLabel.setText(resourceMap.getString("overallScoreLabel.text")); // NOI18N
        overallScoreLabel.setName("overallScoreLabel"); // NOI18N

        codeEarnedLabel.setText(resourceMap.getString("codeEarnedLabel.text")); // NOI18N
        codeEarnedLabel.setName("codeEarnedLabel"); // NOI18N

        codeEarnedText.setName("codeEarnedText"); // NOI18N

        totalEarnedLabel.setText(resourceMap.getString("totalEarnedLabel.text")); // NOI18N
        totalEarnedLabel.setName("totalEarnedLabel"); // NOI18N

        codeTotalText.setEditable(false);
        codeTotalText.setFocusable(false);
        codeTotalText.setName("codeTotalText"); // NOI18N

        codeScoreLabel.setText(resourceMap.getString("codeScoreLabel.text")); // NOI18N
        codeScoreLabel.setName("codeScoreLabel"); // NOI18N

        codeScoreValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        codeScoreValue.setText(resourceMap.getString("codeScoreValue.text")); // NOI18N
        codeScoreValue.setName("codeScoreValue"); // NOI18N

        overallEarnedValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        overallEarnedValue.setText(resourceMap.getString("overallEarnedValue.text")); // NOI18N
        overallEarnedValue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        overallEarnedValue.setName("overallEarnedValue"); // NOI18N

        overallTotalValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        overallTotalValue.setText(resourceMap.getString("overallTotalValue.text")); // NOI18N
        overallTotalValue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        overallTotalValue.setName("overallTotalValue"); // NOI18N

        submitGradeButton.setIcon(resourceMap.getIcon("submitGradeButton.icon")); // NOI18N
        submitGradeButton.setText(resourceMap.getString("submitGradeButton.text")); // NOI18N
        submitGradeButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        submitGradeButton.setIconTextGap(5);
        submitGradeButton.setName("submitGradeButton"); // NOI18N

        javax.swing.GroupLayout singleSelectedPanelLayout = new javax.swing.GroupLayout(singleSelectedPanel);
        singleSelectedPanel.setLayout(singleSelectedPanelLayout);
        singleSelectedPanelLayout.setHorizontalGroup(
            singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, singleSelectedPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(writtenEarnedLabel)
                                    .addComponent(writtenTotalLabel)
                                    .addComponent(writtenScoreLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(writtenScoreValue, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(writtenTotalText, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(writtenEarnedText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))))
                            .addComponent(writtenComponentLabel)
                            .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codeComponentLabel)
                                    .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(codeScoreLabel))
                                    .addComponent(overallLabel)
                                    .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(overalTotalLabel)
                                            .addComponent(overallEarnedLabel)
                                            .addComponent(overallScoreLabel)))
                                    .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(codeEarnedLabel)
                                            .addComponent(totalEarnedLabel))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(codeScoreValue, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(codeTotalText, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(codeEarnedText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                                    .addComponent(overallEarnedValue, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(overallTotalValue, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(overallScoreValue, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)))))
                    .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(submitGradeButton)))
                .addContainerGap())
        );
        singleSelectedPanelLayout.setVerticalGroup(
            singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(writtenComponentLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(writtenEarnedLabel)
                            .addComponent(writtenEarnedText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(writtenTotalLabel)
                            .addComponent(writtenTotalText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(writtenScoreLabel)
                            .addComponent(writtenScoreValue)))
                    .addGroup(singleSelectedPanelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(codeComponentLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeEarnedLabel)
                    .addComponent(codeEarnedText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalEarnedLabel)
                    .addComponent(codeTotalText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeScoreLabel)
                    .addComponent(codeScoreValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(overallLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(overallEarnedLabel)
                    .addComponent(overallEarnedValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(overalTotalLabel)
                    .addComponent(overallTotalValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(singleSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(overallScoreLabel)
                    .addComponent(overallScoreValue))
                .addGap(18, 18, 18)
                .addComponent(submitGradeButton)
                .addGap(61, 61, 61))
        );

        cardPanel.add(singleSelectedPanel, "singlePanel");

        multiSelectedPanel.setName(""); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout multiSelectedPanelLayout = new javax.swing.GroupLayout(multiSelectedPanel);
        multiSelectedPanel.setLayout(multiSelectedPanelLayout);
        multiSelectedPanelLayout.setHorizontalGroup(
            multiSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(multiSelectedPanelLayout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel1)
                .addContainerGap(152, Short.MAX_VALUE))
        );
        multiSelectedPanelLayout.setVerticalGroup(
            multiSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(multiSelectedPanelLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel1)
                .addContainerGap(226, Short.MAX_VALUE))
        );

        cardPanel.add(multiSelectedPanel, "multiPanel");

        instructionsPanel.setName("instructionsPanel"); // NOI18N

        welcomeLabel.setFont(resourceMap.getFont("welcomeLabel.font")); // NOI18N
        welcomeLabel.setText(resourceMap.getString("welcomeLabel.text")); // NOI18N
        welcomeLabel.setName("welcomeLabel"); // NOI18N

        instructionsLabel.setText(resourceMap.getString("instructionsLabel.text")); // NOI18N
        instructionsLabel.setName("instructionsLabel"); // NOI18N

        javax.swing.GroupLayout instructionsPanelLayout = new javax.swing.GroupLayout(instructionsPanel);
        instructionsPanel.setLayout(instructionsPanelLayout);
        instructionsPanelLayout.setHorizontalGroup(
            instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instructionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(instructionsPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(instructionsLabel))
                    .addComponent(welcomeLabel))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        instructionsPanelLayout.setVerticalGroup(
            instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instructionsPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(welcomeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instructionsLabel)
                .addContainerGap(235, Short.MAX_VALUE))
        );

        cardPanel.add(instructionsPanel, "instructionCard");

        jSplitPane2.setName("jSplitPane2"); // NOI18N

        centerPanel.setName("centerPanel"); // NOI18N

        selectedStudsLabel.setText(resourceMap.getString("selectedStudsLabel.text")); // NOI18N
        selectedStudsLabel.setName("selectedStudsLabel"); // NOI18N

        selectedAsgnLabel.setText(resourceMap.getString("selectedAsgnLabel.text")); // NOI18N
        selectedAsgnLabel.setName("selectedAsgnLabel"); // NOI18N

        generateDistButton.setIcon(resourceMap.getIcon("generateDistButton.icon")); // NOI18N
        generateDistButton.setText(resourceMap.getString("generateDistButton.text")); // NOI18N
        generateDistButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        generateDistButton.setIconTextGap(5);
        generateDistButton.setName("generateDistButton"); // NOI18N
        generateDistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateDistButtonActionPerformed(evt);
            }
        });

        reassignGradingButton.setIcon(resourceMap.getIcon("reassignGradingButton.icon")); // NOI18N
        reassignGradingButton.setText(resourceMap.getString("reassignGradingButton.text")); // NOI18N
        reassignGradingButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        reassignGradingButton.setIconTextGap(5);
        reassignGradingButton.setName("reassignGradingButton"); // NOI18N
        reassignGradingButton.setPreferredSize(new java.awt.Dimension(170, 29));
        reassignGradingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reassignGradingButtonActionPerformed(evt);
            }
        });

        statisticsButton.setIcon(resourceMap.getIcon("statisticsButton.icon")); // NOI18N
        statisticsButton.setText(resourceMap.getString("statisticsButton.text")); // NOI18N
        statisticsButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statisticsButton.setIconTextGap(5);
        statisticsButton.setName("statisticsButton"); // NOI18N
        statisticsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statisticsButtonActionPerformed(evt);
            }
        });

        jSeparator1.setName("jSeparator1"); // NOI18N

        sendGradesButton.setIcon(resourceMap.getIcon("sendGradesButton.icon")); // NOI18N
        sendGradesButton.setText(resourceMap.getString("sendGradesButton.text")); // NOI18N
        sendGradesButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        sendGradesButton.setIconTextGap(5);
        sendGradesButton.setName("sendGradesButton"); // NOI18N
        sendGradesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendGradesButtonActionPerformed(evt);
            }
        });

        importGradesButton.setIcon(resourceMap.getIcon("importGradesButton.icon")); // NOI18N
        importGradesButton.setText(resourceMap.getString("importGradesButton.text")); // NOI18N
        importGradesButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        importGradesButton.setIconTextGap(5);
        importGradesButton.setName("importGradesButton"); // NOI18N
        importGradesButton.setPreferredSize(new java.awt.Dimension(170, 29));
        importGradesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importGradesButtonActionPerformed(evt);
            }
        });

        runCodeButton.setIcon(resourceMap.getIcon("runCodeButton.icon")); // NOI18N
        runCodeButton.setText(resourceMap.getString("runCodeButton.text")); // NOI18N
        runCodeButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        runCodeButton.setIconTextGap(5);
        runCodeButton.setName("runCodeButton"); // NOI18N
        runCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runCodeButtonActionPerformed(evt);
            }
        });

        testCodeButton.setIcon(resourceMap.getIcon("testCodeButton.icon")); // NOI18N
        testCodeButton.setText(resourceMap.getString("testCodeButton.text")); // NOI18N
        testCodeButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        testCodeButton.setIconTextGap(5);
        testCodeButton.setName("testCodeButton"); // NOI18N
        testCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testCodeButtonActionPerformed(evt);
            }
        });

        viewRubricButton.setIcon(resourceMap.getIcon("viewRubricButton.icon")); // NOI18N
        viewRubricButton.setText(resourceMap.getString("viewRubricButton.text")); // NOI18N
        viewRubricButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        viewRubricButton.setIconTextGap(5);
        viewRubricButton.setName("viewRubricButton"); // NOI18N
        viewRubricButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRubricButtonActionPerformed(evt);
            }
        });

        extensionButton.setIcon(resourceMap.getIcon("extensionButton.icon")); // NOI18N
        extensionButton.setText(resourceMap.getString("extensionButton.text")); // NOI18N
        extensionButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        extensionButton.setIconTextGap(5);
        extensionButton.setName("extensionButton"); // NOI18N

        exemptionButton.setIcon(resourceMap.getIcon("exemptionButton.icon")); // NOI18N
        exemptionButton.setText(resourceMap.getString("exemptionButton.text")); // NOI18N
        exemptionButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        exemptionButton.setIconTextGap(5);
        exemptionButton.setName("exemptionButton"); // NOI18N

        demoButton.setIcon(resourceMap.getIcon("demoButton.icon")); // NOI18N
        demoButton.setText(resourceMap.getString("demoButton.text")); // NOI18N
        demoButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        demoButton.setIconTextGap(5);
        demoButton.setName("demoButton"); // NOI18N
        demoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                demoButtonActionPerformed(evt);
            }
        });

        printCodeButton.setIcon(resourceMap.getIcon("printCodeButton.icon")); // NOI18N
        printCodeButton.setText(resourceMap.getString("printCodeButton.text")); // NOI18N
        printCodeButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        printCodeButton.setIconTextGap(5);
        printCodeButton.setName("printCodeButton"); // NOI18N
        printCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printCodeButtonActionPerformed(evt);
            }
        });

        printRubricButton.setIcon(resourceMap.getIcon("printRubricButton.icon")); // NOI18N
        printRubricButton.setText(resourceMap.getString("printRubricButton.text")); // NOI18N
        printRubricButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        printRubricButton.setIconTextGap(5);
        printRubricButton.setName("printRubricButton"); // NOI18N
        printRubricButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printRubricButtonActionPerformed(evt);
            }
        });

        openButton.setIcon(resourceMap.getIcon("openButton.icon")); // NOI18N
        openButton.setText(resourceMap.getString("openButton.text")); // NOI18N
        openButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        openButton.setIconTextGap(5);
        openButton.setName("openButton"); // NOI18N
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        previewRubricButton.setIcon(resourceMap.getIcon("previewRubricButton.icon")); // NOI18N
        previewRubricButton.setText(resourceMap.getString("previewRubricButton.text")); // NOI18N
        previewRubricButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        previewRubricButton.setIconTextGap(5);
        previewRubricButton.setName("previewRubricButton"); // NOI18N
        previewRubricButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewRubricButtonActionPerformed(evt);
            }
        });

        gradingStandardsButton.setIcon(resourceMap.getIcon("gradingStandardsButton.icon")); // NOI18N
        gradingStandardsButton.setText(resourceMap.getString("gradingStandardsButton.text")); // NOI18N
        gradingStandardsButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gradingStandardsButton.setIconTextGap(5);
        gradingStandardsButton.setName("gradingStandardsButton"); // NOI18N

        javax.swing.GroupLayout centerPanelLayout = new javax.swing.GroupLayout(centerPanel);
        centerPanel.setLayout(centerPanelLayout);
        centerPanelLayout.setHorizontalGroup(
            centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerPanelLayout.createSequentialGroup()
                .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(centerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(selectedAsgnLabel))
                    .addGroup(centerPanelLayout.createSequentialGroup()
                        .addGap(372, 372, 372)
                        .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(printRubricButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(viewRubricButton, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                    .addGroup(centerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(selectedStudsLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(printCodeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerPanelLayout.createSequentialGroup()
                        .addGap(372, 372, 372)
                        .addComponent(openButton, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                    .addGroup(centerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(previewRubricButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gradingStandardsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(demoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centerPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(centerPanelLayout.createSequentialGroup()
                            .addGap(233, 233, 233)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(69, 69, 69))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerPanelLayout.createSequentialGroup()
                            .addComponent(generateDistButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(reassignGradingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(testCodeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(runCodeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exemptionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(extensionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sendGradesButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(statisticsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(importGradesButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        centerPanelLayout.setVerticalGroup(
            centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectedAsgnLabel)
                .addGap(51, 51, 51)
                .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previewRubricButton)
                    .addComponent(demoButton)
                    .addComponent(gradingStandardsButton))
                .addGap(27, 27, 27)
                .addComponent(selectedStudsLabel)
                .addGap(147, 147, 147)
                .addComponent(openButton)
                .addGap(79, 79, 79)
                .addComponent(printCodeButton)
                .addGap(18, 18, 18)
                .addComponent(viewRubricButton)
                .addGap(4, 4, 4)
                .addComponent(printRubricButton)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centerPanelLayout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(generateDistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(importGradesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reassignGradingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(45, 45, 45)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(statisticsButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(sendGradesButton)
                    .addGap(18, 18, 18)
                    .addComponent(extensionButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(exemptionButton)
                    .addGap(53, 53, 53)
                    .addComponent(runCodeButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(testCodeButton)
                    .addContainerGap(148, Short.MAX_VALUE)))
        );

        jSplitPane2.setLeftComponent(centerPanel);

        rightPanel.setName("rightPanel"); // NOI18N

        generalCommandsLabel.setText(resourceMap.getString("generalCommandsLabel.text")); // NOI18N
        generalCommandsLabel.setName("generalCommandsLabel"); // NOI18N

        blacklistButton.setIcon(resourceMap.getIcon("blacklistButton.icon")); // NOI18N
        blacklistButton.setText(resourceMap.getString("blacklistButton.text")); // NOI18N
        blacklistButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        blacklistButton.setIconTextGap(5);
        blacklistButton.setName("blacklistButton"); // NOI18N

        configButton.setIcon(resourceMap.getIcon("configButton.icon")); // NOI18N
        configButton.setText(resourceMap.getString("configButton.text")); // NOI18N
        configButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        configButton.setIconTextGap(5);
        configButton.setName("configButton"); // NOI18N

        exportDBButton.setIcon(resourceMap.getIcon("exportDBButton.icon")); // NOI18N
        exportDBButton.setText(resourceMap.getString("exportDBButton.text")); // NOI18N
        exportDBButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        exportDBButton.setIconTextGap(5);
        exportDBButton.setName("exportDBButton"); // NOI18N

        resetDatabaseButton.setIcon(resourceMap.getIcon("resetDatabaseButton.icon")); // NOI18N
        resetDatabaseButton.setText(resourceMap.getString("resetDatabaseButton.text")); // NOI18N
        resetDatabaseButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resetDatabaseButton.setIconTextGap(5);
        resetDatabaseButton.setName("resetDatabaseButton"); // NOI18N

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(resetDatabaseButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exportDBButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(configButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(blacklistButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(generalCommandsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generalCommandsLabel)
                .addGap(18, 18, 18)
                .addComponent(blacklistButton)
                .addGap(18, 18, 18)
                .addComponent(configButton)
                .addGap(18, 18, 18)
                .addComponent(exportDBButton)
                .addGap(18, 18, 18)
                .addComponent(resetDatabaseButton)
                .addContainerGap(332, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(rightPanel);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addGap(41, 41, 41))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N
        jMenuBar1.add(jMenu1);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1095, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateDistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateDistButtonActionPerformed
        new AssignmentdistView(this.getSelectedAssignment());
}//GEN-LAST:event_generateDistButtonActionPerformed

    private void reassignGradingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reassignGradingButtonActionPerformed
        new ReassignView(this.getSelectedAssignment());
    }//GEN-LAST:event_reassignGradingButtonActionPerformed

    private void statisticsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statisticsButtonActionPerformed
        HistogramView hv = new HistogramView();
        hv.setLocationRelativeTo(null);
        hv.setVisible(true);
}//GEN-LAST:event_statisticsButtonActionPerformed

    private void sendGradesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendGradesButtonActionPerformed
        GradeReportView grv = new GradeReportView();
        grv.setLocationRelativeTo(null);
        grv.setVisible(true);
}//GEN-LAST:event_sendGradesButtonActionPerformed

    private void importGradesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importGradesButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importGradesButtonActionPerformed

    private void asgnSelectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asgnSelectAllButtonActionPerformed
        assignmentList.setSelectionInterval(0, assignmentList.getModel().getSize() - 1);
        this.updateGUI();
    }//GEN-LAST:event_asgnSelectAllButtonActionPerformed

    private void studentSelectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentSelectAllButtonActionPerformed
        studentList.setSelectionInterval(0, studentList.getModel().getSize() - 1);
        this.updateGUI();
    }//GEN-LAST:event_studentSelectAllButtonActionPerformed

    private void studentSelectNoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentSelectNoneButtonActionPerformed
        studentList.clearSelection();
        this.updateGUI();
    }//GEN-LAST:event_studentSelectNoneButtonActionPerformed

    private void asgnSelectNoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asgnSelectNoneButtonActionPerformed
        assignmentList.clearSelection();
        this.updateGUI();
    }//GEN-LAST:event_asgnSelectNoneButtonActionPerformed

    private void assignmentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignmentListMouseClicked
        this.updateGUI();
    }//GEN-LAST:event_assignmentListMouseClicked

    private void studentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentListMouseClicked
        this.updateGUI();
}//GEN-LAST:event_studentListMouseClicked

    private void demoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_demoButtonActionPerformed
        Allocator.getFrontendUtilities().demoProject(this.getSelectedAssignment());
    }//GEN-LAST:event_demoButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        Allocator.getFrontendUtilities().openStudentProject(this.getSelectedAssignment(), this.getSelectedStudent());
    }//GEN-LAST:event_openButtonActionPerformed

    private void runCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runCodeButtonActionPerformed
        Allocator.getFrontendUtilities().runStudentProject(this.getSelectedAssignment(), this.getSelectedStudent());
    }//GEN-LAST:event_runCodeButtonActionPerformed

    private void testCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testCodeButtonActionPerformed
        Allocator.getFrontendUtilities().runTester(this.getSelectedAssignment(), this.getSelectedStudent());
    }//GEN-LAST:event_testCodeButtonActionPerformed

    private void printCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printCodeButtonActionPerformed
        Allocator.getFrontendUtilities().printStudentProject(this.getSelectedAssignment(), this.getSelectedStudent(), null, true);
    }//GEN-LAST:event_printCodeButtonActionPerformed

    private void printRubricButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printRubricButtonActionPerformed
        RubricManager.convertAllToGrd(this.getSelectedStudents(), (String) assignmentList.getSelectedValue(), Allocator.getGeneralUtilities().getUserLogin());
        Allocator.getFrontendUtilities().printGRDFiles(this.getSelectedStudents(), this.getSelectedAssignment());
    }//GEN-LAST:event_printRubricButtonActionPerformed

    private void viewRubricButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRubricButtonActionPerformed
        new GradingVisualizer(this.getSelectedAssignment(), Allocator.getGeneralUtilities().getUserLogin(), this.getSelectedStudent()).setVisible(true);
    }//GEN-LAST:event_viewRubricButtonActionPerformed

    private void previewRubricButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewRubricButtonActionPerformed
        new PreviewVisualizer(this.getSelectedAssignment());
    }//GEN-LAST:event_previewRubricButtonActionPerformed

    private void asgnTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asgnTypeComboBoxActionPerformed
        if (asgnTypeComboBox.getSelectedItem().equals("Type: All")) {
            assignmentList.setListData(OldDatabaseOps.getAssignmentNames());
        }
        else if (asgnTypeComboBox.getSelectedItem().equals("Type: Lab")) {
            assignmentList.setListData(OldDatabaseOps.getLabNames());
        }
        else if (asgnTypeComboBox.getSelectedItem().equals("Type: Code")) {
            assignmentList.setListData(OldDatabaseOps.getProjectNames());
        }
        else if (asgnTypeComboBox.getSelectedItem().equals("Type: Combination")) {
            assignmentList.setListData(OldDatabaseOps.getProjectNames());
        }
    }//GEN-LAST:event_asgnTypeComboBoxActionPerformed

    private void studentFilterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentFilterKeyPressed
        
    }//GEN-LAST:event_studentFilterKeyPressed

   /**
     * Returns the currently selected assignment as a String.
     *
     * @return
     */
    private Vector<String> getSelectedAssignments(){
        Vector<String> result = new Vector<String>();
        for (Object o : assignmentList.getSelectedValues()) {
            result.add((String) o);
        }
        return result;
    }

    private Vector<String> getSelectedStudents(){
        Vector<String> result = new Vector<String>();
        for (Object o : studentList.getSelectedValues()) {
            result.add((String) o);
        }
        return result;
    }


    private String getSelectedAssignment(){
        return (String) assignmentList.getSelectedValue();
    }

    /**
     * Returns the currently selected student as a String.
     *
     * @return
     */
    private String getSelectedStudent(){
        return (String) studentList.getSelectedValue();
    }

    private boolean singleStudentSelected() {
        return (studentList.getSelectedValues().length == 1);
    }

    private boolean singleAssignmentSelected() {
        return (assignmentList.getSelectedValues().length == 1);
    }

    private boolean nothingSelected() {
        return ((studentList.getSelectedValues().length == 0) && (assignmentList.getSelectedValues().length == 0));
    }

    private void updateGUI() {
        CardLayout cl = (CardLayout) cardPanel.getLayout();
        if (this.nothingSelected()) {
            for (JButton button : _asgnButtons) {
                button.setEnabled(false);
            }

            for (JButton button : _studButtons) {
                button.setEnabled(false);
            }

            cl.show(cardPanel, "instructionCard");
            return;
        }

        //enable/disable appropriate buttons
        if (this.singleAssignmentSelected()) {              //case for single asgn selected
            //enable all assignment buttons
            for (JButton button : _asgnButtons) {
                button.setEnabled(true);
            }

            //update the current assignment label
            selectedAsgnLabel.setText("<html><b>Current Assignment: </b>" + this.getSelectedAssignment() + "</html>");

            //update student buttons
            if (this.singleStudentSelected()) {
                for (JButton button : _studButtons) {
                    button.setEnabled(true);
                }

                //update the current student label
                selectedStudsLabel.setText("<html><b>Current Student: </b>" + this.getSelectedStudent());

                //untar selected student's code
                Allocator.getProject(this.getSelectedAssignment()).untar(this.getSelectedStudent());

                //change card to single student and single assignment
                cl.show(cardPanel, "singlePanel");

                //set Tester button to be enabled or not depending on whether project has a tester
                testCodeButton.setEnabled(Allocator.getFrontendUtilities().hasTester(this.getSelectedAssignment()));
            }
            else {
                for (JButton button : _studButtons) {
                    button.setEnabled(false);
                }
                for (JButton button : _multiStudButtons) {
                    button.setEnabled(true);
                }

                //update the current student label
                selectedStudsLabel.setText("<html><b>Current Student: </b>" + this.getSelectedStudents().size() + " students selected");

                //cannot enter grades for more than one student, so change card
                cl.show(cardPanel, "multiPanel");
            }
        }
        else {                                              //case for multiple assignments selected
            //update assignment buttons
            for (JButton button : _asgnButtons) {
                button.setEnabled(false);
            }
            for (JButton button : _multiAsgnButtons) {
                button.setEnabled(true);
            }

            //update the current assignment label
            selectedAsgnLabel.setText("<html><b>Current Assignment: </b>" + this.getSelectedAssignments().size() + " assignments selected </html>");

            //update student buttons
            for (JButton button : _studButtons) {
                    button.setEnabled(false);
                }
                for (JButton button : _multiStudButtons) {
                    button.setEnabled(true);
                }

            //update the current student label
            selectedStudsLabel.setText("<html><b>Current Student: </b>" + this.getSelectedStudents().size() + " students selected");

            //cannot enter grades for more than one assignment, so change card
            cl.show(cardPanel, "multiPanel");
        }

        

    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewBackend().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asgnSelectAllButton;
    private javax.swing.JLabel asgnSelectLabel;
    private javax.swing.JButton asgnSelectNoneButton;
    private javax.swing.JComboBox asgnTypeComboBox;
    private javax.swing.JList assignmentList;
    private javax.swing.JLabel assignmentsLabel;
    private javax.swing.JButton blacklistButton;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JLabel codeComponentLabel;
    private javax.swing.JLabel codeEarnedLabel;
    private javax.swing.JTextField codeEarnedText;
    private javax.swing.JLabel codeScoreLabel;
    private javax.swing.JLabel codeScoreValue;
    private javax.swing.JTextField codeTotalText;
    private javax.swing.JButton configButton;
    private javax.swing.JButton demoButton;
    private javax.swing.JButton exemptionButton;
    private javax.swing.JButton exportDBButton;
    private javax.swing.JButton extensionButton;
    private javax.swing.JLabel generalCommandsLabel;
    private javax.swing.JButton generateDistButton;
    private javax.swing.JButton gradingStandardsButton;
    private javax.swing.JButton importGradesButton;
    private javax.swing.JLabel instructionsLabel;
    private javax.swing.JPanel instructionsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel multiSelectedPanel;
    private javax.swing.JButton openButton;
    private javax.swing.JLabel overalTotalLabel;
    private javax.swing.JLabel overallEarnedLabel;
    private javax.swing.JLabel overallEarnedValue;
    private javax.swing.JLabel overallLabel;
    private javax.swing.JLabel overallScoreLabel;
    private javax.swing.JLabel overallScoreValue;
    private javax.swing.JLabel overallTotalValue;
    private javax.swing.JButton previewRubricButton;
    private javax.swing.JButton printCodeButton;
    private javax.swing.JButton printRubricButton;
    private javax.swing.JButton reassignGradingButton;
    private javax.swing.JButton resetDatabaseButton;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton runCodeButton;
    private javax.swing.JLabel selectedAsgnLabel;
    private javax.swing.JLabel selectedStudsLabel;
    private javax.swing.JButton sendGradesButton;
    private javax.swing.JPanel singleSelectedPanel;
    private javax.swing.JButton statisticsButton;
    private javax.swing.JTextField studentFilter;
    private javax.swing.JList studentList;
    private javax.swing.JButton studentSelectAllButton;
    private javax.swing.JLabel studentSelectLabel;
    private javax.swing.JButton studentSelectNoneButton;
    private javax.swing.JLabel studentsLabel;
    private javax.swing.JButton submitGradeButton;
    private javax.swing.JButton testCodeButton;
    private javax.swing.JLabel totalEarnedLabel;
    private javax.swing.JButton viewRubricButton;
    private javax.swing.JLabel welcomeLabel;
    private javax.swing.JLabel writtenComponentLabel;
    private javax.swing.JLabel writtenEarnedLabel;
    private javax.swing.JTextField writtenEarnedText;
    private javax.swing.JLabel writtenScoreLabel;
    private javax.swing.JLabel writtenScoreValue;
    private javax.swing.JLabel writtenTotalLabel;
    private javax.swing.JTextField writtenTotalText;
    // End of variables declaration//GEN-END:variables

}
