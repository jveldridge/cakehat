#summary Defines the database schema
#labels Milestone-5.0

student
  * sid INTEGER PRIMARY KEY AUTOINCREMENT
  * login VARCHAR NOT NULL
  * firstname VARCHAR NOT NULL
  * lastname VARCHAR NOT NULL
  * email VARCHAR NOT NULL
  * enabled INTEGER NOT NULL DEFAULT 1
  * hascollab INTEGER NOT NULL DEFAULT 0
  * CONSTRAINT loginunique UNIQUE (login) ON CONFLICT ROLLBACK

ta
  * tid INTEGER PRIMARY KEY NOT NULL //will be POSIX ID
  * login VARCHAR NOT NULL
  * firstname VARCHAR NOT NULL
  * lastname VARCHAR NOT NULL
  * admin INTEGER NOT NULL DEFAULT 0
  * defaultgrader INTEGER NOT NULL DEFAULT 0
  * CONSTRAINT loginunique UNIQUE (login) ON CONFLICT ROLLBACK

blacklist
  * sid INTEGER NOT NULL
  * tid INTEGER NOT NULL
  * FOREIGN KEY (sid) REFERENCES student(sid) ON DELETE CASCADE
  * FOREIGN KEY (tid) REFERENCES ta(tid) ON DELETE CASCADE
  * CONSTRAINT sidtidunique UNIQUE (sid, tid) ON CONFLICT IGNORE

assignment
  * aid INTEGER PRIMARY KEY AUTOINCREMENT
  * name VARCHAR NOT NULL
  * order INTEGER NOT NULL
  * hasgroups INTEGER NOT NULL DEFAULT 0
  * CONSTRAINT orderunique UNIQUE (order) ON CONFLICT ROLLBACK

gradableevent
  * geid INTEGER PRIMARY KEY AUTOINCREMENT
  * aid INTEGER NOT NULL
  * name VARCHAR NOT NULL
  * order INTEGER NOT NULL
  * directory VARCHAR
  * deadlinetype VARCHAR
  * earlydate VARCHAR
  * earlypoints DOUBLE
  * ontimedate VARCHAR
  * latedate VARCHAR
  * latepoints DOUBLE
  * lateperiod VARCHAR
  * FOREIGN KEY (aid) REFERENCES assignment(aid) ON DELETE CASCADE
  * CONSTRAINT orderunique UNIQUE (order) ON CONFLICT ROLLBACK

part
  * pid INTEGER PRIMARY KEY AUTOINCREMENT
  * geid INTEGER NOT NULL
  * name VARCHAR NOT NULL
  * order INTEGER NOT NULL
  * gmltemplate VARCHAR
  * outof DOUBLE
  * quickname VARCHAR
  * gradingguide VARCHAR
  * FOREIGN KEY (geid) REFERENCES gradableevent(geid) ON DELETE CASCADE
  * CONSTRAINT orderunique UNIQUE (order) ON CONFLICT ROLLBACK
  * CONSTRAINT quicknameunique UNIQUE (quickname) ON CONFLICT ROLLBACK

inclusionfilter
  * ifid INTEGER PRIMARY KEY AUTOINCREMENT
  * pid INTEGER NOT NULL
  * type VARCHAR NOT NULL
  * path VARCHAR NOT NULL
  * FOREIGN KEY (pid) REFERENCES part(pid) ON DELETE CASCADE
  * CONSTRAINT pidpathunique UNIQUE (pid, mode) ON CONFLICT ROLLBACK

partaction
  * paid INTEGER PRIMARY KEY AUTOINCREMENT
  * pid INTEGER NOT NULL
  * type VARCHAR NOT NULL
  * name VARCHAR NOT NULL
  * FOREIGN KEY (pid) REFERENCES part(pid) ON DELETE CASCADE
  * CONSTRAINT pidmodeunique UNIQUE (pid, name) ON CONFLICT ROLLBACK

actionproperty
  * apid INTEGER PRIMARY KEY AUTOINCREMENT
  * paid INTEGER NOT NULL
  * key VARCHAR NOT NULL
  * value VARCHAR NOT NULL
  * FOREIGN KEY (apid) REFERENCES partaction(paid) ON DELETE CASCADE
  * CONSTRAINT paidkeyunique UNIQUE (paid, key) ON CONFLICT ROLLBACK

asgngroup
  * agid INTEGER PRIMARY KEY AUTOINCREMENT
  * aid INTEGER NOT NULL
  * FOREIGN KEY (aid) REFERENCES assignment(aid) ON DELETE CASCADE
  * CONSTRAINT aidnameunique UNIQUE (aid, name) ON CONFLICT ROLLBACK

groupmember
  * gmid INTEGER PRIMARY KEY AUTOINCREMENT
  * agid INTEGER NOT NULL
  * sid INTEGER NOT NULL
  * FOREIGN KEY (agid) REFERENCES asgngroup(agid) ON DELETE CASCADE
  * FOREIGN KEY (sid) REFERENCES student(sid) ON DELETE CASCADE

distribution
  * pid INTEGER NOT NULL
  * gpid INTEGER NOT NULL; FOREIGN KEY(gpid) REFERENCES asgngroup(gpid) ON DELETE CASCADE
  * tid INTEGER NOT NULL; FOREIGN KEY(tid) REFERENCES ta(tid) ON DELETE CASCADE
  * CONSTRAINT onegrader UNIQUE (gpid, pid) ON CONFLICT REPLACE
  * CONSTRAINT rowsunique UNIQUE (gpid, pid, tid) ON CONFLICT IGNORE

grade
  * pid INTEGER NOT NULL
  * agid INTEGER NOT NULL
  * earned DOUBLE
  * daterecorded VARCHAR NOT NULL
  * recordedby INTEGER NOT NULL
  * matchesgml INTEGER NOT NULL DEFAULT 1
  * FOREIGN KEY (agid) REFERENCES asgngroup(agid) ON DELETE CASCADE
  * FOREIGN KEY (tid) REFERENCES ta(tid) ON DELETE CASCADE

flag
  * pid INTEGER NOT NULL
  * agid INTEGER NOT NULL
  * note TEXT
  * daterecorded VARCHAR NOT NULL
  * recordedby INTEGER NOT NULL
  * FOREIGN KEY (agid) REFERENCES asgngroup(agid) ON DELETE CASCADE
  * FOREIGN KEY (tid) REFERENCES ta(tid) ON DELETE CASCADE

extension
  * pid INTEGER NOT NULL
  * agid INTEGER NOT NULL
  * ontime VARCHAR NOT NULL
  * shiftdates INTEGER NOT NULL DEFAULT 0
  * note TEXT
  * daterecorded VARCHAR NOT NULL
  * recordedby INTEGER NOT NULL
  * FOREIGN KEY (agid) REFERENCES asgngroup(agid) ON DELETE CASCADE
  * FOREIGN KEY (tid) REFERENCES ta(tid) ON DELETE CASCADE

exemption
  * pid INTEGER NOT NULL
  * agid INTEGER NOT NULL
  * note TEXT
  * daterecorded VARCHAR NOT NULL
  * recordedby INTEGER NOT NULL
  * FOREIGN KEY (agid) REFERENCES asgngroup(agid) ON DELETE CASCADE
  * FOREIGN KEY (tid) REFERENCES ta(tid) ON DELETE CASCADE

adjustment
  * aid INTEGER NOT NULL
  * sid INTEGER NOT NULL
  * note TEXT
  * FOREIGN KEY (aid) REFERENCES assignment(aid) ON DELETE CASCADE
  * FOREIGN KEY (sid) REFERENCES student(sid) ON DELETE CASCADE

courseproperties
  * cpid INTEGER PRIMARY KEY AUTOINCREMENT
  * key VARCHAR NOT NULL
  * value VARCHAR NOT NULL
 * CONSTRAINT keysunique UNIQUE (key) ON CONFLICT ROLLBACK

notifyaddresses
 * naid INTEGER PRIMARY KEY AUTOINCREMENT
 * address VARCHAR NOT NULL